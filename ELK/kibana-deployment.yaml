apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      serviceAccountName: kibana-sa
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:7.10.0
          ports:
            - containerPort: 5601
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "http://elasticsearch:9200"
            - name: ELASTICSEARCH_USERNAME
              value: "kibana_system"
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elk-credentials
                  key: kibana-elasticsearch-password
            - name: KIBANA_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: elk-credentials
                  key: kibana-oauth-client-id
            - name: KIBANA_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: elk-credentials
                  key: kibana-oauth-client-secret
            - name: XPACK_SECURITY_ENCRYPTIONKEY
              valueFrom:
                secretKeyRef:
                  name: elk-credentials
                  key: xpack-security-encryption-key
            - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
              valueFrom:
                secretKeyRef:
                  name: elk-credentials
                  key: xpack-encrypted-saved-objects-encryption-key
            - name: XPACK_REPORTING_ENCRYPTIONKEY
              valueFrom:
                secretKeyRef:
                  name: elk-credentials
                  key: xpack-reporting-encryption-key
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
          volumeMounts:
            - name: kibana-certs
              mountPath: /usr/share/kibana/config/certs
              readOnly: true
            - name: ca-cert
              mountPath: /usr/share/kibana/config/ca
              readOnly: true
            - name: kibana-config
              mountPath: /usr/share/kibana/config/kibana.yml
              subPath: kibana.yml
            - name: secrets-store-inline
              mountPath: /mnt/secrets-store
              readOnly: true
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
      volumes:
        - name: kibana-certs
          secret:
            secretName: kibana-localhost-tls
        - name: ca-cert
          secret:
            secretName: local-ca
        - name: kibana-config
          configMap:
            name: kibana-config
        - name: secrets-store-inline
          csi:
            driver: secrets-store-gke.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: elk-secrets
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "purpose"
                    operator: In
                    values:
                      - "elk"
                  - key: "set"
                    operator: In
                    values:
                      - "ss-elk"
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  annotations:
    cloud.google.com/backend-config: '{"default": "kibana-backend-config"}'
spec:
  selector:
    app: kibana
  ports:
    - protocol: TCP
      port: 5601
      targetPort: 5601
  type: ClusterIP