apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "product-service.fullname" . }}
  labels:
    {{- include "product-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "product-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "product-service.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "product-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled -}}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled -}}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: log-volume
              mountPath: /var/log/product-service
            {{- if .Values.secretManager.enabled }}
            - name: secrets-store
              mountPath: "/mnt/secrets"
              readOnly: true
            {{- end }}
          {{- if .Values.secretManager.enabled }}
          env:
            - name: SPRING_CLOUD_GCP_CREDENTIALS_LOCATION
              value: "file:/mnt/secrets/product-svc-account-credentials"
            {{- if .Values.secretManager.envFrom }}
            {{- range .Values.secretManager.envFrom }}
            {{- if .secretKey }}
            - name: {{ .env }}
              valueFrom:
                secretKeyRef:
                  name: product-service-secrets
                  key: {{ .secretKey }}
            {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}
        {{- if .Values.filebeat.enabled }}
        - name: filebeat
          image: "{{ .Values.filebeat.image.repository }}:{{ .Values.filebeat.image.tag }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: log-volume
              mountPath: /var/log/product-service
            - name: filebeat-config
              mountPath: /usr/share/filebeat/filebeat.yml
              subPath: filebeat.yml
        {{- end }}
      {{- if .Values.cloudsqlproxy.enabled }}
      initContainers:
        - name: cloud-sql-proxy
          restartPolicy: Always
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.14.1
          args:
            - "--private-ip"
            - "--auto-iam-authn"
            - "--structured-logs"
            - "--port=5432"
            - "shopsmartsg-451708:asia-southeast1:shopsmart-sqldb"
          securityContext:
            runAsNonRoot: true
      {{- end }}
      volumes:
        - name: log-volume
          emptyDir: {}
        {{- if .Values.filebeat.enabled }}
        - name: filebeat-config
          configMap:
            name: filebeat-config
        {{- end }}
        {{- if .Values.secretManager.enabled }}
        - name: secrets-store
          csi:
            driver: secrets-store-gke.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: product-service-secrets
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}